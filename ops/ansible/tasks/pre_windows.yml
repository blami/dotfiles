---
# Windows tasks that run before actual roles.

# NOTE: DO NOT use env lookups here as they run on controller and not the host itself.

- name: Gathering Windows User Facts
  win_whoami:
  register: out
- set_fact:
    my_user: >
      {{ my_user | xcombine({
        "username": out.account.account_name,
        "domain_username": out.account.domain_name + "\\" + out.account.account_name,
        "userprofile": ansible_facts.env.USERPROFILE,
        "msaccount": None if (out.groups | selectattr('domain_name', 'contains', 'MicrosoftAccount') | list | length) == 0 else (out.groups | selectattr('domain_name', 'contains', 'MicrosoftAccount') | first).account_name,
        "is_administrator": (out.groups | selectattr('account_name', 'contains', 'Administrators') | list | length) > 0,
      }) }}

- name: Gathering Windows Environment Facts
  win_shell: Get-Item Env:* | Select Key,Value | ConvertTo-Json
  register: out
- set_fact:
    my_facts: >
      {{ my_facts | xcombine({
        "systemroot": env.SystemRoot,
        "windir": env.windir,
        "appdata": env.APPDATA,
        "localappdata": env.LOCALAPPDATA,
      }) }}
  vars:
    - env: "{{ out.stdout | from_json | items2dict(key_name='Key', value_name='Value') }}"

- name: Checking Become System
  win_shell: "$true"
  become: yes
  become_user: System
  become_method: runas
  register: out
  failed_when: false
  changed_when: false
- set_fact:
    my_facts: >
      {{ my_facts | xcombine({
        "has_become_system": true if out.rc == 0 else false,
      }) }}

# NOTE: tasks/pre_wsl.yml on the Linux side pre-sets some my_facts about WSL.
# If is_wsl is not present in my_facts just set it to false.
- set_fact:
    my_facts: >
      {{ my_facts | xcombine({
        "is_wsl": false if "is_wsl" not in my_facts else my_facts.is_wsl
      }) }}

# NOTE: win_chocolatey_facts takes too much time, so far no list of packages is
# needed so I resort to simply calling Chocolatey
- name: Checking If Chocolatey Is Installed
  win_shell: choco --version
  register: out
  failed_when: false
- set_fact:
    my_facts: >
      {{ my_facts | xcombine({
        "has_choco": out.rc == 0
      }) }}

- name: Gathering Local Chocolatey Source Fact
  set_fact:
    my_facts: >
      {{ my_facts | xcombine({
        "choco_source": my_facts.wsl_unc_home_dir + "\ops\choco" if my_facts.is_wsl else my_user.userprofile + "\ops\choco"
      }) }}
