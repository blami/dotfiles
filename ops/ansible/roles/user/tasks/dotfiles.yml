---
# Clone and update dotfiles
# NOTE: Depends on git being installed by os role and in PATH.
# NOTE: Depends on sparse checkout to not litter with irrelevant files on
# either OS.

# Linux
- block:
  - name: "Cloning Dotfiles Repository {{ dotfiles }}"
    # NOTE: Not using builtin.git as we clone to ~ which already exists.
    shell:
      chdir: "{{ my_user.home }}"
      cmd: |
        umask {{ my_user.umask }}
        git init --separate-git-dir .dfgit -b main
        git --git-dir=.dfgit remote add -f -m main origin https://github.com/{{ dotfiles }}
        git --git-dir=.dfgit config core.sparseCheckout true
        cat <<\EOF > .dfgit/info/sparse-checkout
        *
        !/AppData
        EOF
        git --git-dir=.dfgit reset --hard origin/main
        git --git-dir=.dfgit checkout main
        git --git-dir=.dfgit branch --set-upstream-to=origin/main main
        [ -f .git ] && rm -rf .git
      creates: "{{ my_user.home }}/.dfgit"
    # NOTE: Might require http_proxy
    environment: "{{ env }}"
    register: out

  - name: "Updating Dotfiles"
    shell:
      chdir: "{{ my_user.home }}"
      cmd: |
        umask {{ my_user.umask }}
        git --git-dir=.dfgit pull --ff-only
    # NOTE: Might require http_proxy
    environment: "{{ env }}"
    register: result
    changed_when: result.stdout != "Already up to date."
    ignore_errors: true # NOTE: When fast-forward not possible
    when:
      - not out.changed

  when:
    - ansible_facts.system in ("Linux",)

# Windows
- block:
  - name: "Cloning Dotfiles Repository {{ dotfiles }}"
    # NOTE: Not using builtin.git as we clone to USERPROFILE which already exists.
    win_shell: |
        git.exe init --separate-git-dir .dfgit -b main
        git.exe --git-dir=.dfgit remote add -f -m main origin https://github.com/{{ dotfiles }}
        git.exe --git-dir=.dfgit config set core.sparseCheckout true
        @"
        /AppData
        /.local
        /.config
        /.ssh
        /.git*
        /.vim
        /bin
        /tmpl
        "@ | Out-File -FilePath .\.dfgit\info\sparse-checkout -Encoding UTF8
        git.exe --git-dir=.dfgit reset --hard origin/main
        git.exe --git-dir=.dfgit checkout main
        git.exe --git-dir=.dfgit branch --set-upstream-to=origin/main main
        Remove-Item -Path .git -Force -EA SilentlyContinue
    args:
      chdir: "{{ my_user.win_userprofile }}"
      creates: "{{ my_user.win_userprofile }}/.dfgit"
    # NOTE: Might require http_proxy
    environment: "{{ env }}"
    register: out

  - name: "Updating Dotfiles"
    win_shell: |
        git.exe --git-dir=.dfgit pull --ff-only
    args:
      chdir: "{{ my_user.win_userprofile }}"
    # NOTE: Might require http_proxy
    environment: "{{ env }}"
    register: result
    changed_when: "'Already up to date.' not in result.stdout_lines"
    ignore_errors: true # NOTE: When fast-forward not possible
    when:
      - not out.changed

  - name: "Hiding Dotfiles"
    win_shell: |
      $changed = 0
      $d = @() + (Get-ChildItem {{ my_user.win_userprofile }} -Filter AppData -Force)
      $d += Get-ChildItem {{ my_user.win_userprofile }} -Filter .* -Force
      $d | foreach {
        if (-not ($_.Attributes -match "Hidden")) {
          $_.Attributes += "Hidden"
          $changed += 1
        }
      }
      Write-Host $changed
    args:
      chdir: "{{ my_user.win_userprofile }}"
    register: result
    changed_when: result.stdout | int > 0

  when:
    - ansible_facts.os_family in ("Windows",)


