---
# User-level directories

# Linux
- include_role:
    name: _common
    tasks_from: dirs.yml
  vars:
    label: "User"
    # WARN: DO NOT use dirs: {{ dirs }} as variable (recursion)
    dirs: "{{ user_dirs }}"
    prefix: "{{ my_user.home }}/"
  when:
    - ansible_facts.system in ("Linux",)

# Windows
- block:
  - include_role:
      name: _common
      tasks_from: win_dirs.yml
    vars:
      label: "User"
      # WARN: DO NOT use dirs: {{ dirs }} as variable (recursion)
      dirs: "{{ user_dirs }}"
      prefix: "{{ my_user.win_userprofile }}\\"

  - name: "Creating desktop.ini"
    xwin_desktop_ini:
      path: "{{ my_user.win_userprofile }}\\{{ item.path | xwin_path }}"
      icon: "{{ item.win_icon }}"
    loop_control:
      label: "{{ item.path }}"
    with_items: "{{ user_dirs | selectattr('win_icon', 'defined') }}"

  - name: "Relocating User Shell Folders"
    xwin_shell_folder:
      guid: "{{ item.win_guid }}"
      path: "{{ my_user.win_userprofile }}\\{{ item.path | xwin_path }}"
      move_files: true
    loop_control:
      label: "{{ item.path }}"
    with_items: "{{ user_dirs | selectattr('win_guid', 'defined') }}"

  - name: "Removing Unwanted Directories"
    win_shell: |
      $changed = 0
      if (Test-Path -Path "{{ item.key }}" -PathType container) {
        Remove-Item -Path "{{ item.key }}" -Recurse -Force -EA SilentlyContinue
        $changed = 1
      }
      if (!(Test-Path -Path "{{ item.key }}" -PathType leaf) -and ${{ item.value }}) {
        $file = New-Item -Path "{{ item.key }}" -ItemType file
        $file.Attributes += "Hidden"
        $file.Attributes += "System"
        $changed = 1
      }
      Write-Host $changed
    args:
      chdir: "{{ my_user.win_userprofile }}"
    register: result
    changed_when: result.stdout | int > 0
    with_dict:
      # NOTE: Item name and whether to install decoy file; decoy file prevents
      # app or Windows re-create the directory.
      "Contacts": false
      "Desktop": false
      "Downloads": false
      "Favorites": false
      "Links": false
      "OneDrive": false
      "Pictures": false
      "Saved Games": false
      "Searches": false
      "ansel": true         # Nvidia
      "source": true        # Visual Studio

  when:
    - ansible_facts.os_family in ("Windows",)
