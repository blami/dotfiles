---
# Change Windows Power Settings

# NOTE: Make shutdowns/restarts faster by killing services earlier.
- name: Setting Service Kill Timeout To 300ms
  win_regedit:
    path: "HKLM:\\SYSTEM\\CurrentControlSet\\Control"
    name: "WaitToKillServiceTimeout"
    data: "300"
    type: "string"

- name: Disarming Wake-Up For Input Devices
  win_shell: |
    $changed = 0
    powercfg /devicequery wake_armed | foreach {
      if ($_) {
        $dev = Get-PnpDevice -FriendlyName "$($_)" -ErrorAction SilentlyContinue
        if ($dev -and (@("Keyboard", "Mouse", "HIDClass", "Bluetooth") -contains $dev.Class)) {
          powercfg /devicedisablewake $_
          $changed += 1
        }
      }
    }
    Write-Host $changed
  register: result
  changed_when: result.stdout | int > 0

- name: Enabling AHCI Link Power Management Control Panel
  win_regedit:
    path: "HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Power\\PowerSettings\\0012ee47-9041-4b5d-9b77-535fba8b1442\\0b2d69d7-a2a1-449c-9680-f91c70521c60"
    name: "Attributes"
    data: 0x00000002
    type: "dword"

# Some optical drives do not like to be powered off (mostly burners)
- name: Disabling CD Drive Power Off
  win_regedit:
    path: "HKLM:\\SYSTEM\\CurrentControlSet\\Services\\cdrom\\Parameters"
    name: "ZeroPowerODDEnabled"
    data: 0x00000000
    type: "dword"

# NOTE: Windows does not allow to do this per-device, so try to find relevant
# devices first.
# NOTE: "SCSI CdRom Device" is suffix added by JMicron JBD controllers.
- win_shell: |
    $lookup = @(`
      "PIONEER BD-RW   BDR-UD03", `
      "PIONEER BD-RW   BDR-UD03 SCSI CdRom Device" `
    )
    @(Get-PnpDevice | Where-Object { $lookup -contains $_.FriendlyName -and $_.Status -Eq "OK" }).Count
  register: out
  changed_when: false
- name: Setting AHCI Link Power Management DIPM (All Profiles)
  win_shell: |
    $changed = 0
    # Get all profile GUIDs
    $re = '(\{){0,1}[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}(\}){0,1}'
    $out = powercfg /list
    $guids = @()
    foreach ($l in $out) {
      $guid = [regex]::Match($l, $re).Value
      if ($guid -ne "") { $guids += $guid }
    }
    # Modify all profile AC/DC settings if needed
    # NOTE: DIPM value is 3
    foreach ($g in $guids) {
      $out = powercfg /query $g 0012ee47-9041-4b5d-9b77-535fba8b1442 0b2d69d7-a2a1-449c-9680-f91c70521c60
      if (-not($out -match "Current AC Power Setting Index: 0x00000003")) {
        powercfg /setacvalueindex $g 0012ee47-9041-4b5d-9b77-535fba8b1442 0b2d69d7-a2a1-449c-9680-f91c70521c60 3
        $changed += 1
      }
      if (-not($out -match "Current DC Power Setting Index: 0x00000003")) {
        powercfg /setdcvalueindex $g 0012ee47-9041-4b5d-9b77-535fba8b1442 0b2d69d7-a2a1-449c-9680-f91c70521c60 3
        $changed += 1
      }
    }
    Write-Host $changed
  register: result
  changed_when: result.stdout | int > 0
  when:
    - not out.failed
    - out.stdout | int > 0

# BUG: See https://github.com/microsoft/WSL/issues/8204, https://github.com/microsoft/WSL/issues/10006
- name: Adding Scheduled Task To Workaround WSL2 Wake-Up Clock Skew
  win_scheduled_task:
    name: "FixWSL2ClockSkew"
    description: "Fix WSL2 clock skew after computer wakes up from sleep."
    author: "Ansible"
    run_level: highest
    multiple_instances: 2 # NOTE: Allow only one instance
    run_only_if_idle: false
    disallow_start_if_on_batteries: false # NOTE: Run on both AC and bateries
    stop_if_going_on_batteries: false
    compatibility: 4 # NOTE: Windows 10
    triggers:
      - type: event
        # NOTE: Microsoft-Windows-Kernel-Power and NOT JUST Kernel-Power
        subscription: "<QueryList><Query Id=\"0\" Path=\"System\"><Select Path=\"System\">*[System[Provider[@Name='Microsoft-Windows-Kernel-Power'] and EventID=507]]</Select></Query></QueryList>"
    actions:
      - path: C:\Windows\System32\wsl.exe
        arguments: -d Ubuntu -u root -- /usr/local/bin/wsl_clocksync
  when:
    - my_facts.is_wsl
    - my_facts.wsl_version == 2
