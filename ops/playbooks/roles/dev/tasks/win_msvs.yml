---
# Configure Visual Studio

# NOTE: This DOES NOT install Visual Studio! It only makes various
# configuration changes on computer with already installed Visual Studio.

- name: Checking for Visual Studio installation
  win_shell: >
    Get-CimInstance MSFT_VSInstance
  register: out
  failed_when: false
  changed_when: false
- set_fact:
    msvs_facts: >
      {{
        msvs_facts | default({})
        | combine({
            "installed": out.rc == 0,
          })
      }}
- set_fact:
    msvs_facts: >
      {{
        msvs_facts | default({})
        | combine({
            "version": out.stdout | regex_search('Version\s+:\s+(?P<version>\d+\.\d+)', '\g<version>') | first,
            "path": out.stdout | regex_search('InstallLocation\s+:\s+(?P<path>.+)\r', '\g<path>') | first,
            "id": out.stdout | regex_search('IdentifyingNumber\s+:\s+(?P<id>[0-9a-z]+)', '\g<id>') | first,
          })
      }}
  when:
    - msvs_facts.installed

- name: "Change path settings"
  win_regedit:
    hive: "%USERPROFILE%\\AppData\\Local\\Microsoft\\VisualStudio\\{{ msvs_facts.version }}_{{ msvs_facts.id }}\\privateregistry.bin"
    path: "HKLM:\\ANSIBLE\\Software\\Microsoft\\VisualStudio\\{{ msvs_facts.version }}_{{ msvs_facts.id }}"
    name: "{{ item.key }}"
    data: "{{ item.value }}"
    type: "string"
  with_dict:
    - VisualStudioProjectsLocation: "%USERPROFILE%\\src"
    - DefaultFileOpenLocation: "%USERPROFILE%\\src"
    - DefaultNewProjectLocation: "%USERPROFILE%\\src\\"
    - DefaultNewProjItemLocation: "%USERPROFILE%\\src"
    - DefaultOpenProjectLocation: "%USERPROFILE%\\src\\"
    - DefaultOpenProjItemLocation: "%USERPROFILE%\\src"
    - DefaultOpenSolutionLocation: "%USERPROFILE%\\src"
  when:
    - msvs_facts.installed

