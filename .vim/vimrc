" ~/.vim/vimrc - Vim configuration

" {{{ General
set nocompatible                                                                " Enable Vi-improved extensions
set autowrite                                                                   " Auto-save file on e.g. :make
set autoread                                                                    " Watch for outside-Vim file changes
set hidden                                                                      " Enable editing multiple files w/o saving changes (hidden buffers)
set history=1000
"set undolevels=1000

set encoding=utf-8
set fileformat=unix                                                             " Always use UNIX line endings

" Configuration variables
let s:vimrcdir=split(&rtp[0], ',')[0]
let s:tmpdir='/tmp'

" Terminal
set ttyfast                                                                     " Fast TTY
set timeout timeoutlen=750 ttimeoutlen=750                                      " Timeout of multikey :mappings and keycodes (in ms)

" Pathogen
set sessionoptions-=options                                                     " Don't capture 'runtimepath' when using Vim sessions
runtime bundle/pathogen/autoload/pathogen.vim                                   " Add pathogen to runtime path
exec pathogen#infect('bundle/{}')
" }}}


" {{{ Files and directories
" Swap files
set nobackup                                                                    " Don't create backup files~
set noswapfile                                                                  " Don't create swapfiles
set swapsync=fsync

" Vim info file
if has('win32') || has('win64')
    set viminfo+=n$HOME/.viminfo                                                " Use same ~/.viminfo as Cygwin
endif

" Temporary directory
if has('win32') || has('win64')
    " $TEMP is always set in Windows
    let s:tmpdir=expand($TEMP)
elseif has('unix')
    " if $TMP is set (per-user $TMP) use it, otherwise use /tmp
    if !empty($TMP) | let s:tmpdir=expand($TMP) | endif
endif
let &backupdir=s:tmpdir
let &dir=s:tmpdir
let g:netrw_home=s:tmpdir

" Undo
"let &undodir=

" Filetype handling
set modeline                                                                    " Enable modeline parser (# vim:)
set exrc                                                                        " Enable per-project .vimrc loading
set filetype=off                                                                " Enable filetype plugins selectively
filetype plugin on
filetype indent on

set noautochdir                                                                 " Don't update current working directory
set autoread                                                                    " Automatically re-read file if changed outside Vim

" Filename/wildchar completion
set wildmenu
set wildmode=list:longest

set wildignore=*.swp,*.bak,*.backup,*.orig,*.new
set wildignore+=*.out,*.exe,*.so,*.a,*.dll,*.lib,*.jar,*.war,*.manifest
set wildignore+=*.o,*.obj,*.pyc,*.pyo,*.class,*.luac
set wildignore+=.git,.hg,.svn,.cvs,.dfgit,*.DS_Store

" Per-OS binaries and directories
if has('win32') || has('win64')
    set shell=C:\Cygwin\bin\zsh
endif
" }}}


" {{{ Editing
" Indentation
set smarttab
set smartindent                                                                 " Do smart indentation (similar to `cindent'), see `indentexpr'
set autoindent                                                                  " Continue indentation automaticaly
set copyindent                                                                  " Copy indentation from previous line on auto-indentation
set expandtab                                                                   " Use appropriate number of spaces instead of Tab
set nojoinspaces
set nostartofline                                                               " Keep cursor (if possible) on same column while moving up and down
set shiftwidth=4
set shiftround                                                                  " Use multiple of shiftwidth when indenting
set softtabstop=4
set tabstop=4

" Automated formatting
set formatoptions=tcroqn                                                        " Automated formating settings

" Clipboard
set clipboard+=unnamed                                                          " Yanks go to to clipboard
set go+=a                                                                       " Copy visual buffer to clipboard

" Backspace
set backspace=indent,eol,start

" Wrapping
set nowrap                                                                      " Don't wrap lines (in window)
set textwidth=79                                                                " Default text-width is 79 columns
if exists('+colorcolumn')
    set cc=80,120,160
endif

" Scrolling
set scrolloff=2                                                                 " Show at least 2 lines when scrolling
set sidescrolloff=8                                                             " Show at least 8 columns when scrolling

" Folding
set foldenable
set foldmethod=marker                                                           " Fold by marker
set foldlevel=100                                                               " Don't fold anything automatically
set foldopen=block,hor,mark,percent,quickfix,tag
" }}}


" {{{ Search and replace
set ignorecase                                                                  " Ignore case during searches
set smartcase                                                                   " Override previous if search pattern contains uppercase characters
set wrapscan                                                                    " Wrap through document (end->begin, begin->end)
set hlsearch                                                                    " Hilight search pattern matches in document
set incsearch
set gdefault                                                                    " Add /g by default
" }}}


" {{{ Spell checking
" NOTE: My dotfiles contain .spl files in ~/.vim/spell
let g:spelllangs=['en', 'cs']                                                   " Available spell languages (for cycling)
set nospell                                                                     " Globally disable spellcheck by default
let &g:spelllang=get(g:spelllangs,0)                                            " Set global default spellcheck language

" Custom word list(s)
let g:spellfile_common=$HOME.'/.vim/spell/common.utf8.add'                      " Not language specific words (e.g. names) used by util#ToggleSpellLang()
let &spellfile=$HOME.'/.vim/spell/custom-'.&g:spelllang.'.utf8.add,'.g:spellfile_common

" Disable annoying download message
set eventignore+=SpellFileMissing,
" }}}


" {{{ User interface
set background=dark                                                             " Use dark background by default
set t_ut=                                                                       " Don't erase background (GNU Screen)
if has('mouse')
    set mousehide                                                               " Hide mouse when typing (GUI)
    set mouse=a
endif
if has('title')
    set title                                                                   " Change terminal title to
    set titlestring=VIM:\ [%{hostname()}]\ %t\ %m%r                             " VIM: [hostname] filename [+-=][RO]
    set titleold=VIM
endif
set noerrorbells                                                                " Disable error bells

set shortmess-=fmnrt                                                            " Don't show short message for fmnrwt
set showmode                                                                    " Show current editor mode in status line (e.g. -- INSERT --)
set showcmd                                                                     " Show last command in status line
set ruler                                                                       " Show ruler in status line
set number                                                                      " Show line numbers
set numberwidth=4
if has('signs')
    set signcolumn=yes                                                          " Always show sign gutter
endif
set cursorline                                                                  " Hilight current line (darker background)

set splitright                                                                  " When splitting window put the new one to right
set splitbelow                                                                  " When splitting window put the new one below

set background=dark                                                             " Set dark background
colorscheme blami256                                                            " Set color scheme
syntax on                                                                       " Enable syntax hilighting
set synmaxcol=160                                                               " Highlight only first 160 columns

set showmatch                                                                   " Show matching pairs
set matchpairs=(:),{:},[:],<:>
set matchtime=5
set list                                                                        " Show Tab, EOL or trailing spaces
set lcs=tab:__,trail:.,extends:$,precedes:^

" Status line
" NOTE User colors: 90=active,91=inactive,92=buffer,93=position,94=[RO],95=spell
set laststatus=2                                                                " Always show status line
set statusline=
" left side
set statusline+=%92*%2.2n%*                                                     " Buffer number
set statusline+=\ %t%m%94*%r%*                                                  " Filename, modified and RO flags
set statusline+=\ %92*[%{&ft!=''?&ft:'off'}]%*                                  " Filetype
set statusline+=\ %<%{&ff}%{&fenc!=''?','.&fenc:''}                             " File format and encoding
set statusline+=\ %96*%{bufstatus#StatusPage()}%*                               " Buffer specific status information
" right side
set statusline+=%=
set statusline+=%{&spell!=0?strpart(&spelllang,0,2):''}
set statusline+=\ ch=%b,0x%B                                                    " Character code
set statusline+=\ %93*%{matchstr(&fo,'t')!=''?'>'.&tw.'\ ':''}%c,%l/%LL\ %P%*   " Position [>tw] (col,line/lines) all%

" GUI specific settings
if has('gui_running')
    behave xterm                                                                " Xterm behavior in Windows/X11
    set guioptions=aAigrp
    " Fonts
    if has('unix')
        set guifont=InputMono\ 11
    elseif has('gui_win32') || has('gui_win64')
        set guifont=InputMono:h11:cEASTEUROPE
    endif
endif
" }}}

"" Temporary stuff
let g:syntastic_mode_map = {
    \ "mode": "passive" }

" {{{ Includes
source $HOME/.vim/keymap.vim                                                    " Keyboard mappings
source $HOME/.vim/abbrev.vim                                                    " Abbreviations
source $HOME/.vim/autocmd.vim                                                   " Autocommands
" }}}

" vim:set fo-=t:
