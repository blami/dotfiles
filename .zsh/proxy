#!/usr/bin/env zsh
# proxy - set/unset proxies based on ~/.proxy{,_local}

# Format of ~/.proxy{,_local}:
# ID    PROXY                   NOPROXY
# local http://proxy.local:3125 .local,.nodomain,local.com 

# Usage: proxy local
#        proxy cache >/dev/null
#        proxy -
#        proxy
proxy() {
	local no_proxy_default='localhost,.localdomain,.local,127.0.0.1'
	local ok=
	
	if [[ $# -gt 1 ]]; then
		>&2 echo "error: too many arguments"
		exit 1

	elif [[ $# -eq 1 && $1 == '-' ]]; then
		http_proxy=
		https_proxy=
		ftp_proxy=
		socks_proxy=
		no_proxy=

	elif [[ $# -eq 1 ]]; then
		local file=
		local line=
		for file in $HOME/.proxy{,_local}(N); do
			file=( ${(f@)"$(<$file)"} )
			for line in $file; do
				line=( ${(@)=line} )
				[[ ${#line[@]} -ge 2 ]] || { >&2 echo "error: invalid proxy spec '$line', skipping" ; continue }
				[[ ${line[2]} =~ "^[a-zA-Z0-9]*://" ]] || line[2]="http://${line[2]}"
				if [[ ${line[1]:l} == ${1:l} ]]; then
					http_proxy=${line[2]}
					https_proxy=$http_proxy
					ftp_proxy=$http_proxy
					socks_proxy=$http_proxy
					no_proxy=${line[3]}
					[[ -z $no_proxy ]] && no_proxy=$no_proxy_defalt || no_proxy=$no_proxy,$no_proxy_default
					ok=1
					break
				fi
			done
			[[ -n $ok ]] && break
		done
		if [[ -z $ok ]]; then
			>&2 echo "error: proxy id '$1' not found"
			exit 1
		fi
	fi

	if [[ -n $ok ]]; then
		HTTP_PROXY=$http_proxy
		HTTPS_PROXY=$https_proxy
		FTP_PROXY=$ftp_proxy
		SOCKS_PROXY=$socks_proxy
		NO_PROXY=$no_proxy
		export http_proxy https_proxy ftp_proxy socks_proxy no_proxy \
			HTTP_PROXY HTTPS_PROXY FTP_PROXY SOCKS_PROXY NO_PROXY
	fi

	# print
	for v in http_proxy https_proxy ftp_proxy socks_proxy; \
		echo "$v:\t${(P)v:-(direct)}"
	echo "no_proxy:\t${no_proxy}"
}

proxy $@
