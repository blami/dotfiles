#!/bin/bash -ue
# Interact with OS clipboard using OSC52 escape sequence
# Copyright (c) Ondrej Balaz. Licensed under UNLICENSE.

PROG="$(basename "$0")"
HELP=$(cat <<EOF
$PROG - Interact with OS clipboard using OSC52 escape
Usage: $PROG -p             paste contents of OS clipboard to stdout
       $PROG -c [ARG...]    copy stdin (or ARG) to OS clipboard

This script depends on \$OSTYPE for OS detection, if your bash doesn't provide
it set it manually.

Copyright (c) Ondrej Balaz. Licensed under UNLICENSE license.
Download and bug-reports: https://github.com/blami/dotfiles
EOF
)

# Process arguments
ACTION=
while getopts "hpc" OPT; do
    case "$OPT" in
    h)
        echo "$HELP"; exit 0
        ;;
    c|p)
        if [ -n "$ACTION" ]; then
            >&2 echo "$PROG: -p and -c are mutually exclusive" ; exit 1
        fi
        ACTION=$OPT
        ;;
    \?)
        exit 1
        ;;
    esac
done ; shift $((OPTIND-1))
if [ -z "$ACTION" ]; then
    >&2 echo "$PROG: -p or -c expected" ; exit 1
fi

case "$ACTION" in
    c)
        [ $# -eq 0 ] && TEXT=$(</dev/stdin) || TEXT="$*"
        # shellcheck disable=SC1003
        printf '\033]52;c;%s\033\\' "$(base64 <<< "$TEXT")"
        ;;

    p)
        # TODO: Windows Terminal does not support paste for security reasons
        # see: https://github.com/microsoft/terminal/issues/9479
        #TEXT=$(printf '\033]52;c;?\033\\')
        exit 2
        ;;
esac
